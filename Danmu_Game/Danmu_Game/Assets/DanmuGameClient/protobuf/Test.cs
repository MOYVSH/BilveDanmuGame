// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuffer/test.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protobuffer/test.proto</summary>
public static partial class TestReflection {

  #region Descriptor
  /// <summary>File descriptor for Protobuffer/test.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TestReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZQcm90b2J1ZmZlci90ZXN0LnByb3RvImsKCHRlc3RpbmZvEg8KB2RldnR5",
          "cGUYASABKAUSDQoFZGV2aWQYAiABKAUSDgoGdW5pdGlkGAMgASgFEg0KBWNo",
          "bGlkGAQgASgFEg4KBnRlc3RpZBgFIAEoBRIQCghzdGVwZGF0YRgGIAEoDGIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::testinfo), global::testinfo.Parser, new[]{ "Devtype", "Devid", "Unitid", "Chlid", "Testid", "Stepdata" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class testinfo : pb::IMessage<testinfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<testinfo> _parser = new pb::MessageParser<testinfo>(() => new testinfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<testinfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TestReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public testinfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public testinfo(testinfo other) : this() {
    devtype_ = other.devtype_;
    devid_ = other.devid_;
    unitid_ = other.unitid_;
    chlid_ = other.chlid_;
    testid_ = other.testid_;
    stepdata_ = other.stepdata_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public testinfo Clone() {
    return new testinfo(this);
  }

  /// <summary>Field number for the "devtype" field.</summary>
  public const int DevtypeFieldNumber = 1;
  private int devtype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Devtype {
    get { return devtype_; }
    set {
      devtype_ = value;
    }
  }

  /// <summary>Field number for the "devid" field.</summary>
  public const int DevidFieldNumber = 2;
  private int devid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Devid {
    get { return devid_; }
    set {
      devid_ = value;
    }
  }

  /// <summary>Field number for the "unitid" field.</summary>
  public const int UnitidFieldNumber = 3;
  private int unitid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Unitid {
    get { return unitid_; }
    set {
      unitid_ = value;
    }
  }

  /// <summary>Field number for the "chlid" field.</summary>
  public const int ChlidFieldNumber = 4;
  private int chlid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Chlid {
    get { return chlid_; }
    set {
      chlid_ = value;
    }
  }

  /// <summary>Field number for the "testid" field.</summary>
  public const int TestidFieldNumber = 5;
  private int testid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Testid {
    get { return testid_; }
    set {
      testid_ = value;
    }
  }

  /// <summary>Field number for the "stepdata" field.</summary>
  public const int StepdataFieldNumber = 6;
  private pb::ByteString stepdata_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Stepdata {
    get { return stepdata_; }
    set {
      stepdata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as testinfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(testinfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Devtype != other.Devtype) return false;
    if (Devid != other.Devid) return false;
    if (Unitid != other.Unitid) return false;
    if (Chlid != other.Chlid) return false;
    if (Testid != other.Testid) return false;
    if (Stepdata != other.Stepdata) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Devtype != 0) hash ^= Devtype.GetHashCode();
    if (Devid != 0) hash ^= Devid.GetHashCode();
    if (Unitid != 0) hash ^= Unitid.GetHashCode();
    if (Chlid != 0) hash ^= Chlid.GetHashCode();
    if (Testid != 0) hash ^= Testid.GetHashCode();
    if (Stepdata.Length != 0) hash ^= Stepdata.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Devtype != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Devtype);
    }
    if (Devid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Devid);
    }
    if (Unitid != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Unitid);
    }
    if (Chlid != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Chlid);
    }
    if (Testid != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Testid);
    }
    if (Stepdata.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(Stepdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Devtype != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Devtype);
    }
    if (Devid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Devid);
    }
    if (Unitid != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Unitid);
    }
    if (Chlid != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Chlid);
    }
    if (Testid != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Testid);
    }
    if (Stepdata.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(Stepdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Devtype != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Devtype);
    }
    if (Devid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Devid);
    }
    if (Unitid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unitid);
    }
    if (Chlid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chlid);
    }
    if (Testid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Testid);
    }
    if (Stepdata.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Stepdata);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(testinfo other) {
    if (other == null) {
      return;
    }
    if (other.Devtype != 0) {
      Devtype = other.Devtype;
    }
    if (other.Devid != 0) {
      Devid = other.Devid;
    }
    if (other.Unitid != 0) {
      Unitid = other.Unitid;
    }
    if (other.Chlid != 0) {
      Chlid = other.Chlid;
    }
    if (other.Testid != 0) {
      Testid = other.Testid;
    }
    if (other.Stepdata.Length != 0) {
      Stepdata = other.Stepdata;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Devtype = input.ReadInt32();
          break;
        }
        case 16: {
          Devid = input.ReadInt32();
          break;
        }
        case 24: {
          Unitid = input.ReadInt32();
          break;
        }
        case 32: {
          Chlid = input.ReadInt32();
          break;
        }
        case 40: {
          Testid = input.ReadInt32();
          break;
        }
        case 50: {
          Stepdata = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Devtype = input.ReadInt32();
          break;
        }
        case 16: {
          Devid = input.ReadInt32();
          break;
        }
        case 24: {
          Unitid = input.ReadInt32();
          break;
        }
        case 32: {
          Chlid = input.ReadInt32();
          break;
        }
        case 40: {
          Testid = input.ReadInt32();
          break;
        }
        case 50: {
          Stepdata = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
